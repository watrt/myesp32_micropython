from machine import Pin, SPIfrom ili9163 import ILI9163_SPI,ILI9163import ujsonimport urequestsimport _threadspi = SPI(baudrate=4000000,sck=Pin(12), mosi=Pin(14),miso=Pin(22))  #miso=Pin(4)是无交的因为必须配置所以乱写的ili = ILI9163_SPI(128, 160, spi, Pin(26), Pin(27), Pin(22))main_show=Truedef getnowtime():  import ntptime  import machine  ntptime.host="cn.ntppod.com"  rtc=machine.RTC()  ntptime.settime()  def showtime():  ili.fill(0xFFFF)  try:    if rtc.datetime()[0]<2020:      getnowtime()  #小于2020年就重新更新时间    ili.fill_rect(5,5,56,50,ili.brg(r=255))    ili.fill_rect(66,5,56,50,ili.brg(b=255))    ili.fill_rect(5,60,118,50,ili.brg(g=255))    ili.fill_rect(5,115,118,50,ili.brg(255,0,204))    ili.textst('%s' % nic.ifconfig()[0], 8, 120, 0xFFFF)    ili.textst('%s' % nic.ifconfig()[1], 8, 130, 0xFFFF)    ili.textst('%s' % nic.ifconfig()[2], 8, 140, 0xFFFF)    ili.textst('内存:', 70, 18, 0xFFFF)    ili.textst('%sKb' % (gc.mem_free()//1024), 70, 30, 0xFFFF)    ili.textst('HI!', 10, 16, ili.brg(b=255))    ili.textst('FUKUN!', 10, 26, ili.brg(b=255))    ili.textst('日期:%s-%s-%s'%(rtc.datetime()[0],rtc.datetime()[1],rtc.datetime()[2]), 8, 73, ili.brg(b=255))    ili.textst('时间:%s:%s:%s'%(rtc.datetime()[4],rtc.datetime()[5],rtc.datetime()[6]), 8, 88, ili.brg(b=255))  except:    ili.textst('错误!!', 10, 26, ili.brg(b=255))  finally:    ili.show()def showweather():  ili.fill(0xFFFF)  try:    response = urequests.get('http://t.weather.sojson.com/api/weather/city/101270401')    weather = ujson.loads(response.text)    ili.fill(0xFFFF)    ili.fill_rect(5,5,123,115,ili.brg(g=255))    ili.textst('湿度:%-4s温度:%s度' % (weather['data']['shidu'],weather['data']['wendu']), 10, 1*13, ili.brg(r=255))    ili.textst('Pm25:%-dPm10:%d' % (weather['data']['pm25'],weather['data']['pm10']), 10, 2*13, ili.brg(r=255))    ili.textst('提示:%s' % weather['data']['ganmao'] , 10, 3*13, ili.brg(r=255))    ili.textst('最高:%s' % weather['data']['forecast'][0]['high'], 10, 4*13, ili.brg(r=255))    ili.textst('位置:%s' % weather['cityInfo']['city'], 10, 5*13, ili.brg(r=255))    ili.textst('指数:%s' % weather['data']['yesterday']['aqi'], 10, 6*13, ili.brg(r=255))    ili.textst('位置KEY:%s' % weather['cityInfo']['citykey'], 10, 7*13, ili.brg(r=255))    ili.textst('更新时间:%s' % weather['cityInfo']['updateTime'], 10, 8*13, ili.brg(r=255))    ili.fill_rect(5,125,123,30,ili.brg(r=255))    ili.textst('日出:%s' % weather['data']['yesterday']['sunrise'], 10, 10*13, ili.brg(b=255))    ili.textst('日落:%s' % weather['data']['yesterday']['sunset'], 10, 11*13, ili.brg(b=255))  except:    ili.textst('错误!!', 10, 26, ili.brg(b=255))  finally:    ili.show()def mainshow(agv):    global main_show    while main_show:      showtime()      time.sleep(4)      showweather()      time.sleep(4)    _thread.exit()_thread.start_new_thread(mainshow,(1,))